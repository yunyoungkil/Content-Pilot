

### **Content Pilot 워크스페이스 기능 PRD (v1.0)**

#### **1. 목표 (Goal)**

기존의 분절된 탭(스크랩북, 칸반 보드, 초안 작성) 구조를 탈피하고, **하나의 콘텐츠를 완성하기 위한 모든 작업을 한 화면에서 완결**할 수 있는 통합적인 '워크스페이스' 환경을 제공한다. 이를 통해 사용자의 컨텍스트 전환 비용을 최소화하고, 콘텐츠 기획부터 초안 작성까지의 생산성을 극대화한다.

-----

#### **2. 기능 범위 (Scope)**

| ID | 기능명 | 설명 |
| :--- | :--- | :--- |
| **W-1** | **워크스페이스 진입 및 레이아웃** | 기획 보드의 '아이디어' 카드 클릭 시, 3단 구조(AI 브리핑, 메인 에디터, 자료 보관함)의 워크스페이스 화면으로 전환된다. |
| **W-2** | **AI 브리핑 패널** | 아이디어와 관련된 AI 추천 키워드, 목차 등을 표시하고, 클릭 시 에디터에 내용을 추가하는 상호작용을 제공한다. |
| **W-3** | **메인 에디터** | 콘텐츠 초안을 작성하는 공간을 제공하며, 'AI 초안 생성' 기능을 통해 글의 뼈대를 자동으로 만들 수 있다. |
| **W-4** | **자료 보관함 패널** | '연결된 자료'와 '모든 스크랩'으로 구분된 목록을 제공하며, 스크랩 자료를 에디터 본문에 삽입하는 기능을 지원한다. |
| **W-5** | **스크랩-아이디어 데이터 연동** | 드래그 앤 드롭을 통해 '모든 스크랩'을 '연결된 자료'로 추가하고, 이 연결을 데이터베이스에 영구적으로 저장 및 해제한다. |

-----

#### **3. 사용자 행동 패턴 (User Flow)**

1.  **[기획 보드]** 사용자가 '기획 보드'의 '아이디어' 칸에 있는 특정 아이디어 카드를 클릭한다.
2.  **[워크스페이스 진입]** 화면이 해당 아이디어에 대한 워크스페이스로 전환된다. 헤더는 '뒤로가기' 버튼으로 변경된다.
3.  **[자료 수집 및 연결]** 우측 '자료 보관함'의 '모든 스크랩' 목록을 탐색하다가, 현재 아이디어와 관련된 스크랩 카드를 '연결된 자료' 영역으로 드래그 앤 드롭하여 추가한다.
4.  **[개요 구성]** 좌측 'AI 브리핑'의 '추천 키워드'를 클릭하여 중앙 '메인 에디터'에 소제목을 추가하며 글의 구조를 잡는다.
5.  **[초안 작성]** 'AI로 초안 생성하기' 버튼을 눌러 글의 기본 뼈대를 만들거나, '연결된 자료'의 스크랩 카드를 에디터로 드래그 앤 드롭하여 내용을 인용하며 직접 초안을 작성한다.
6.  **[기획 보드 복귀]** 초안 작성이 어느 정도 완료되면, '뒤로가기' 버튼을 눌러 다시 기획 보드 화면으로 돌아온다.

-----

#### **4. 상세 기능 요구 사항 (Detailed Requirements)**

| ID | 요구 사항 | 세부 내용 (Acceptance Criteria) |
| :--- | :--- | :--- |
| **W-1** | **워크스페이스 진입 및 레이아웃** | **A/C-1:** `기획 보드`의 `[data-status="ideas"]` 칸에 있는 카드를 클릭하면 `renderWorkspace` 함수가 호출되어야 한다.<br>**A/C-2:** 화면은 좌측(AI 브리핑), 중앙(메인 에디터), 우측(자료 보관함)의 3단 Flexbox 또는 Grid 레이아웃으로 구성되어야 한다.<br>**A/C-3:** 헤더의 탭 메뉴는 사라지고 '뒤로가기' 버튼이 포함된 네비게이션 바로 교체되어야 한다. |
| **W-2** | **AI 브리핑 패널** | **A/C-1:** 아이디어 데이터에 포함된 `keywords` 배열을 순회하며 `.tag.interactive-tag` 클래스를 가진 span 태그를 렌더링해야 한다.<br>**A/C-2:** `.interactive-tag` 클릭 시, 해당 키워드가 마크다운 소제목 형식(`## 키워드`)으로 '메인 에디터'의 텍스트 끝에 추가되어야 한다. |
| **W-3** | **메인 에디터** | **A/C-1:** `#generate-draft-btn` 버튼 클릭 시, `background.js`에 `generate_draft_from_idea` 액션과 함께 현재 아이디어 데이터를 전송해야 한다.<br>**A/C-2:** `background.js`로부터 성공적으로 초안 텍스트를 수신하면, `.main-editor-textarea`의 값을 해당 텍스트로 교체해야 한다. |
| **W-4** | **자료 보관함 패널** | **A/C-1:** 워크스페이스 진입 시 `background.js`에 `get_all_scraps` 액션을 요청하여 모든 스크랩 데이터를 받아와야 한다.<br>**A/C-2:** '모든 스크랩' 목록의 카드를 에디터로 드래그 앤 드롭하면, 해당 카드의 텍스트가 에디터에 삽입되어야 한다. |
| **W-5**| **스크랩-아이디어 데이터 연동**| **A/C-1:** '모든 스크랩'의 카드를 '연결된 자료' 영역에 드롭하면, `background.js`에 `link_scrap_to_idea` 액션과 함께 `ideaId`, `scrapId`를 전송해야 한다.<br>**A/C-2:** `background.js`로부터 성공 응답을 받으면, 드롭된 카드가 '연결된 자료' 목록에 시각적으로 추가되어야 한다.<br>**A/C-3:** '연결된 자료' 카드의 `.unlink-scrap-btn` 버튼 클릭 시, `background.js`에 `unlink_scrap_from_idea` 액션을 요청하고 성공 시 UI에서 해당 카드를 제거해야 한다. |

-----

#### **5. 데이터 모델 (Data Model)**

Firebase Realtime Database의 `kanban/ideas/{ideaId}` 경로에 저장될 아이디어 객체는 다음과 같은 구조를 권장합니다.

```json
{
  "idea-123": {
    "title": "블로그 방문자 늘리는 AI 글쓰기 전략",
    "description": "AI를 활용하여 SEO에 최적화된 블로그 글을 작성하는 방법에 대한 심층 분석 콘텐츠",
    "createdAt": 1678886400000,
    "tags": ["#AI-추천"],
    
    // 워크스페이스 관련 데이터
    "workspace": {
      "keywords": ["AI 글쓰기", "콘텐츠 전략", "SEO"],
      "outline": "...",
      "draft": "AI가 생성하거나 사용자가 작성한 초안 텍스트...",
      "linkedScraps": {
        "scrap-abc": true,
        "scrap-def": true
      }
    }
  }
}
```